[build-system]
requires = [
    "setuptools>=78.1.1; python_version>='3.9'",
    "setuptools>=65.5.1,<72.0.0; python_version<'3.9'",
    "wheel"
]
build-backend = "setuptools.build_meta"

[project]
name = "swebench-runner"
version = "0.1.0"
description = "A delightfully simple CLI for running SWE-bench evaluations"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "SWE-bench Runner Contributors"},
]
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Testing",
    "Topic :: System :: Benchmark",
]
dependencies = [
    "click>=8.1.0,<9.0",
    "docker>=6.1.0,<8.0",
    "datasets>=2.0.0,<3.0",
    "huggingface-hub>=0.16.0,<1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "mypy>=1.0",
    "ruff>=0.1",
]

[project.scripts]
swebench = "swebench_runner.cli:cli"

[project.urls]
Homepage = "https://github.com/swebench/runner"
Repository = "https://github.com/swebench/runner"
Issues = "https://github.com/swebench/runner/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=swebench_runner --cov-report=term-missing --cov-report=html"
# Coverage requirement removed - we prioritize meaningful tests over coverage metrics

[tool.mypy]
python_version = "3.10"
strict = true
show_error_codes = true
show_error_context = true
pretty = true
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true

[tool.ruff]
target-version = "py310"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "D",  # pydocstyle
    "UP", # pyupgrade
    "B",  # flake8-bugbear
    "S",  # flake8-bandit
    "C4", # flake8-comprehensions
]
ignore = [
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D107", # Missing docstring in __init__
    "S101", # Use of assert
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "S"]  # Ignore docstring and security warnings in tests
