name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check-commits:
    name: Check commit messages
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Check commit format
      run: |
        # Simple check for conventional commits (excluding merge commits)
        git log --format="%s" origin/main..HEAD --no-merges | while read commit; do
          if [ -z "$commit" ]; then
            continue
          fi
          if ! echo "$commit" | grep -qE "^(feat|fix|docs|style|refactor|test|chore|perf|ci|build|revert)(\(.+\))?: .+"; then
            echo "Error: Commit message doesn't follow conventional format: $commit"
            echo "Expected format: type(scope): description"
            exit 1
          fi
        done

  check-files:
    name: Check file requirements
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@v4

    - name: Check for large files
      run: |
        # Check for files larger than 1MB
        find . -type f -size +1M | grep -v "^./.git" | while read file; do
          echo "Error: File $file is larger than 1MB"
          exit 1
        done

    - name: Check for generated files
      run: |
        # Ensure no wheel files are committed
        if find . -name "*.whl" -o -name "*.egg-info" | grep -v "^./.git"; then
          echo "Error: Generated files (wheels, egg-info) should not be committed"
          exit 1
        fi

  test-coverage:
    name: Enforce test coverage
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: pyproject.toml

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        pip install -e .

    - name: Check test coverage
      run: |
        pytest tests/ --cov=swebench_runner --cov-fail-under=85
        echo "âœ… Test coverage is above 85%"
